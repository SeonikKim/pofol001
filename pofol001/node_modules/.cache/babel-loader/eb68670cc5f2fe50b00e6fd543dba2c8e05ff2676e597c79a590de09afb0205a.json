{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjsdl\\\\Desktop\\\\portfolio\\\\pofol001\\\\src\\\\views\\\\pages\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Weather = () => {\n  _s();\n  const API_KEY = \"163c2c5f76b523d8d2147930060e9bb9\";\n  const [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    // 서울을 기준으로 설정하였습니다. 필요하다면 도시를 변경할 수 있습니다.\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=Seoul&appid=${API_KEY}&units=metric&lang=kr`).then(response => response.json()).then(data => setForecast(data.list)).catch(error => console.error('Error fetching the weather data', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Title\",\n      children: \"5\\uC77C/3\\uC2DC\\uAC04\\uBCC4 \\uB0A0\\uC528 \\uC608\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), forecast ? forecast.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC2DC\\uAC04: \", entry.dt_txt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC628\\uB3C4: \", entry.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uB0A0\\uC528: \", entry.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${entry.weather[0].icon}.png`,\n        alt: entry.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC528 \\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"xlTKpFGEDY72AHUcnH/1pPBQUkI=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Weather","_s","API_KEY","forecast","setForecast","fetch","then","response","json","data","list","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","dt_txt","main","temp","weather","description","src","icon","alt","_c","$RefreshReg$"],"sources":["C:/Users/tjsdl/Desktop/portfolio/pofol001/src/views/pages/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/Weather.css';\r\n\r\nexport const Weather = () => {\r\n    const API_KEY = \"163c2c5f76b523d8d2147930060e9bb9\";\r\n    const [forecast, setForecast] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // 서울을 기준으로 설정하였습니다. 필요하다면 도시를 변경할 수 있습니다.\r\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=Seoul&appid=${API_KEY}&units=metric&lang=kr`)\r\n            .then(response => response.json())\r\n            .then(data => setForecast(data.list))\r\n            .catch(error => console.error('Error fetching the weather data', error));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"MainWrap\">\r\n            <h1 className=\"Title\">5일/3시간별 날씨 예보</h1>\r\n            {forecast ? (\r\n                forecast.map((entry, index) => (\r\n                    <div key={index} className=\"forecast-entry\">\r\n                        <div>시간: {entry.dt_txt}</div>\r\n                        <div>온도: {entry.main.temp}°C</div>\r\n                        <div>날씨: {entry.weather[0].description}</div>\r\n                        <img src={`http://openweathermap.org/img/wn/${entry.weather[0].icon}.png`} alt={entry.weather[0].description} />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>날씨 데이터를 가져오는 중...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAG,kCAAkC;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACAQ,KAAK,CAAE,kEAAiEH,OAAQ,uBAAsB,CAAC,CAClGI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC,CACpCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAKe,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBhB,OAAA;MAAIe,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvChB,QAAQ,GACLA,QAAQ,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtBvB,OAAA;MAAiBe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACvChB,OAAA;QAAAgB,QAAA,GAAK,gBAAI,EAACM,KAAK,CAACE,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7BpB,OAAA;QAAAgB,QAAA,GAAK,gBAAI,EAACM,KAAK,CAACG,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClCpB,OAAA;QAAAgB,QAAA,GAAK,gBAAI,EAACM,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CpB,OAAA;QAAK6B,GAAG,EAAG,oCAAmCP,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAACG,IAAK,MAAM;QAACC,GAAG,EAAET,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC;MAAY;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAJ1GG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACR,CAAC,gBAEFpB,OAAA;MAAAgB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA7BYD,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}