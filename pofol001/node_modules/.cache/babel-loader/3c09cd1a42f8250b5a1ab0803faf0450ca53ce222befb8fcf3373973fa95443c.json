{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjsdl\\\\Desktop\\\\portfolio\\\\pofol001\\\\src\\\\views\\\\pages\\\\Netflix.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LanguageSelect from \"../components/Selects\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Netflix = () => {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState('korean');\n  const handleLanguageChange = language => {\n    setSelectedLanguage(language);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NetFlixWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NF-Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"NF-Title\",\n          children: \"\\uB137\\uD50C\\uB9AD\\uC2A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LanguageSelect, {\n          onSelectLanguage: handleLanguageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NF-Login\",\n          children: selectedLanguage === 'korean' ? '로그인' : 'Sign in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Netflix, \"aplE0loDOTL8YdDV4UZEpMLvREM=\");\n_c = Netflix;\nvar _c;\n$RefreshReg$(_c, \"Netflix\");","map":{"version":3,"names":["React","useState","LanguageSelect","jsxDEV","_jsxDEV","Fragment","_Fragment","Netflix","_s","selectedLanguage","setSelectedLanguage","handleLanguageChange","language","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSelectLanguage","_c","$RefreshReg$"],"sources":["C:/Users/tjsdl/Desktop/portfolio/pofol001/src/views/pages/Netflix.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LanguageSelect from \"../components/Selects\"\r\n\r\n\r\nexport const Netflix = () => {\r\n    const [selectedLanguage, setSelectedLanguage] = useState('korean');\r\n  \r\n    const handleLanguageChange = (language) => {\r\n      setSelectedLanguage(language);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"NetFlixWrap\">\r\n        \r\n          <div className=\"NF-Header\">\r\n            \r\n            <span className='NF-Title'>넷플릭스</span>\r\n            <LanguageSelect onSelectLanguage={handleLanguageChange} />\r\n            <button className='NF-Login'>{selectedLanguage === 'korean' ? '로그인' : 'Sign in'}</button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAElE,MAAMU,oBAAoB,GAAIC,QAAQ,IAAK;IACzCF,mBAAmB,CAACE,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAD,QAAA,eAE1BT,OAAA;QAAKU,SAAS,EAAC,WAAW;QAAAD,QAAA,gBAExBT,OAAA;UAAMU,SAAS,EAAC,UAAU;UAAAD,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtCd,OAAA,CAACF,cAAc;UAACiB,gBAAgB,EAAER;QAAqB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1Dd,OAAA;UAAQU,SAAS,EAAC,UAAU;UAAAD,QAAA,EAAEJ,gBAAgB,KAAK,QAAQ,GAAG,KAAK,GAAG;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACV,EAAA,CApBSD,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}