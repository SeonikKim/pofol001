{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjsdl\\\\Desktop\\\\portfolio\\\\pofol001\\\\src\\\\views\\\\pages\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Seoul');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        getWeatherData(position.coords.latitude, position.coords.longitude);\n      });\n    } else {\n      getWeatherDataByCity(city);\n    }\n  }, [city]);\n  const getWeatherDataByCity = async city => {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=163c2c5f76b523d8d2147930060e9bb9`);\n    setWeatherData(response.data);\n  };\n  const getWeatherData = async (lat, lon) => {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=163c2c5f76b523d8d2147930060e9bb9`);\n    setWeatherData(response.data);\n  };\n  const handleCityChange = e => {\n    setCity(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Title\",\n      children: \"\\uB0A0\\uC528\\uC815\\uBCF4\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: city,\n        onChange: handleCityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Seoul\",\n          children: \"\\uC11C\\uC6B8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Busan\",\n          children: \"\\uBD80\\uC0B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Daegu\",\n          children: \"\\uB300\\uAD6C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Incheon\",\n          children: \"\\uC778\\uCC9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getWeatherDataByCity(city),\n        children: \"\\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), weatherData.list.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: new Date(forecast.dt * 1000).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/w/${forecast.weather[0].icon}.png`,\n          alt: forecast.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: forecast.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC628\\uB3C4: \", forecast.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"5qB08Z2/RsVnFyCRmB1q6HhesrU=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","city","setCity","navigator","geolocation","getCurrentPosition","position","getWeatherData","coords","latitude","longitude","getWeatherDataByCity","response","get","data","lat","lon","handleCityChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","name","list","map","forecast","index","Date","dt","toLocaleString","src","weather","icon","alt","description","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/tjsdl/Desktop/portfolio/pofol001/src/views/pages/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/Weather.css';\r\n\r\nexport const Weather = () => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState('Seoul');\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                getWeatherData(position.coords.latitude, position.coords.longitude);\r\n            });\r\n        } else {\r\n            getWeatherDataByCity(city);\r\n        }\r\n    }, [city]);\r\n\r\n    const getWeatherDataByCity = async (city) => {\r\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=163c2c5f76b523d8d2147930060e9bb9`);\r\n        setWeatherData(response.data);\r\n    };\r\n\r\n    const getWeatherData = async (lat, lon) => {\r\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=163c2c5f76b523d8d2147930060e9bb9`);\r\n        setWeatherData(response.data);\r\n    };\r\n\r\n    const handleCityChange = (e) => {\r\n        setCity(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"MainWrap\">\r\n            <h1 className=\"Title\">날씨정보페이지</h1>\r\n            <div>\r\n                <select value={city} onChange={handleCityChange}>\r\n                    <option value=\"Seoul\">서울</option>\r\n                    <option value=\"Busan\">부산</option>\r\n                    <option value=\"Daegu\">대구</option>\r\n                    <option value=\"Incheon\">인천</option>\r\n                </select>\r\n                <button onClick={() => getWeatherDataByCity(city)}>조회</button>\r\n            </div>\r\n            {weatherData && (\r\n                <div>\r\n                    <h2>{weatherData.city.name}</h2>\r\n                    {weatherData.list.map((forecast, index) => (\r\n                        <div key={index}>\r\n                            <div>{new Date(forecast.dt * 1000).toLocaleString()}</div>\r\n                            <img src={`https://openweathermap.org/img/w/${forecast.weather[0].icon}.png`} alt={forecast.weather[0].description} />\r\n                            <div>{forecast.weather[0].description}</div>\r\n                            <div>온도: {forecast.main.temp}°C</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}