{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjsdl\\\\Desktop\\\\portfolio\\\\pofol001\\\\src\\\\views\\\\pages\\\\Elements.jsx\";\nimport '../css/Elements.css';\nimport ElementComponent from '../components/ElementsCompo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Elements = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: \"\\uC6D0\\uC18C\\uC8FC\\uAE30\\uC728\\uD45C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Elements;\nconst elements = [\n// 원소 배열 예시 (실제로는 전체 원소 정보를 추가해야 합니다.)\n{\n  atomicNumber: 1,\n  symbol: \"H\",\n  name: \"Hydrogen\",\n  atomicWeight: \"1.008\"\n}\n// ... 다른 원소들\n];\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"periodic-table\",\n    children: elements.map(element => /*#__PURE__*/_jsxDEV(ElementComponent, {\n      element: element\n    }, element.atomicNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Elements\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["ElementComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Elements","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","elements","atomicNumber","symbol","name","atomicWeight","App","map","element","_c2","$RefreshReg$"],"sources":["C:/Users/tjsdl/Desktop/portfolio/pofol001/src/views/pages/Elements.jsx"],"sourcesContent":["import '../css/Elements.css'\r\nimport ElementComponent from '../components/ElementsCompo';\r\nexport const Elements = () => {\r\n    return (\r\n        <>\r\n            <div className=\"MainWrap\">\r\n\r\n                <h1 className=\"Title\">원소주기율표</h1>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst elements = [\r\n    // 원소 배열 예시 (실제로는 전체 원소 정보를 추가해야 합니다.)\r\n    {\r\n        atomicNumber: 1,\r\n        symbol: \"H\",\r\n        name: \"Hydrogen\",\r\n        atomicWeight: \"1.008\"\r\n    },\r\n    // ... 다른 원소들\r\n];\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"periodic-table\">\r\n            {elements.map(element => <ElementComponent key={element.atomicNumber} element={element} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAO,qBAAqB;AAC5B,OAAOA,gBAAgB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3D,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC1B,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAKK,SAAS,EAAC,UAAU;MAAAD,QAAA,eAErBJ,OAAA;QAAIK,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAC,EAAA,GAVYP,QAAQ;AAcrB,MAAMQ,QAAQ,GAAG;AACb;AACA;EACIC,YAAY,EAAE,CAAC;EACfC,MAAM,EAAE,GAAG;EACXC,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;AAClB;AACA;AAAA,CACH;;AAED,SAASC,GAAGA,CAAA,EAAG;EACX,oBACIhB,OAAA;IAAKK,SAAS,EAAC,gBAAgB;IAAAD,QAAA,EAC1BO,QAAQ,CAACM,GAAG,CAACC,OAAO,iBAAIlB,OAAA,CAACF,gBAAgB;MAA4BoB,OAAO,EAAEA;IAAQ,GAAvCA,OAAO,CAACN,YAAY;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEd;AAACU,GAAA,GANQH,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAN,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}